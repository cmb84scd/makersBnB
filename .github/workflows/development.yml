name: Pipeline CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: makers_bnb_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/makers_bnb_test
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1.224.0
      with:
        ruby-version: '2.7'
        bundler-cache: true
    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL..."
          sleep 1
        done
    - name: Set up the test database
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -d makers_bnb_test -f db/migrations/01_create_user_table.sql
        PGPASSWORD=postgres psql -h localhost -U postgres -d makers_bnb_test -f db/migrations/02_user_table_altered_no_duplicates.sql
        PGPASSWORD=postgres psql -h localhost -U postgres -d makers_bnb_test -f db/migrations/03_create_listings_table.sql
        PGPASSWORD=postgres psql -h localhost -U postgres -d makers_bnb_test -f db/migrations/04_add_user_id_foreign_key_column.sql
        PGPASSWORD=postgres psql -h localhost -U postgres -d makers_bnb_test -f db/migrations/05_create_pictures_table.sql
        PGPASSWORD=postgres psql -h localhost -U postgres -d makers_bnb_test -f db/migrations/06_alter_pictures_table.sql
        PGPASSWORD=postgres psql -h localhost -U postgres -d makers_bnb_test -f db/migrations/07_create_availability_table.sql
        PGPASSWORD=postgres psql -h localhost -U postgres -d makers_bnb_test -f db/migrations/08_create_bookings_table.sql
    - name: Run tests
      run: PGPASSWORD=postgres bundle exec rspec
    - name: Clean up database
      run: |
        psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS makers_bnb_test;"
